(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{356:function(s,t,e){"use strict";e.r(t);var a=e(42),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"使用批处理提交代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用批处理提交代码"}},[s._v("#")]),s._v(" 使用批处理提交代码")]),s._v(" "),e("blockquote",[e("p",[s._v("个人代码库,无需考虑冲突时使用")])]),s._v(" "),e("p",[s._v("1.git批处理")]),s._v(" "),e("p",[s._v("新建text文件输入如下:")]),s._v(" "),e("div",{staticClass:"language-bat extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('GIT提交批处理\ngit add -A .\necho 执行结束！\nset /p declation=输入commit:\ngit commit -m "%declation%"\necho 将变更情况提交到远程git服务器\ngit push origin master\necho 批处理执行完毕！\npause\n')])])]),e("p",[s._v("2.另存为修改编码为ANSI格式,否则出现乱码,不好看,后缀改为bat,OK")]),s._v(" "),e("h2",{attrs:{id:"手动推送更新个人博客代码到gitee"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手动推送更新个人博客代码到gitee"}},[s._v("#")]),s._v(" 手动推送更新个人博客代码到Gitee")]),s._v(" "),e("p",[s._v("在项目目录下，创建内容如下的 deploy.sh (可以适当地取消注释) 并运行它以进行部署：")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/usr/bin/env sh")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当发生错误时中止脚本")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -e\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建no")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cd 到构建输出的目录下 ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" dist\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" -A\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'deploy'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git@gitee.com:deep-brez/deep-brez.git --\x3e 仓库ssh公钥")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意使用-f会将本地代码覆盖远程仓库")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -f git@gitee.com:deep-brez/deep-brez.git master\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" -\n")])])]),e("p",[s._v("使用此方式推送,需要在Gitee设置里添加账户ssh")]),s._v(" "),e("p",[s._v("可以按如下命令来生成 sshkey:")]),s._v(" "),e("p",[s._v("命令行输入:")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('ssh-keygen -t rsa -C "xxxxx@xxxxx.com"  \n')])])]),e("p",[s._v("注意：这里的 xxxxx@xxxxx.com 只是生成的 sshkey 的名称，并不约束或要求具体命名为某个邮箱。\n现网的大部分教程均讲解的使用邮箱生成，其一开始的初衷仅仅是为了便于辨识所以使用了邮箱。")]),s._v(" "),e("p",[s._v("按照提示完成三次回车，即可生成 ssh key。通过查看 ~/.ssh/id_rsa.pub 文件内容，获取到你的 public key")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("cat ~/.ssh/id_rsa.pub\n")])])]),e("p",[s._v("复制生成后的 ssh key，通过gitee的设置->ssh公钥添加到账户。")])])}),[],!1,null,null,null);t.default=n.exports}}]);